{"ast":null,"code":"var _jsxFileName = \"/Users/hang/Everything/computing/hold_em/app/frontend/src/components/PlayerList.jsx\";\n// src/components/PlayerList.jsx\nimport React from 'react';\nimport Card from './Card';\nimport Table from './Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlayerList({\n  players,\n  gameState,\n  onPlayerAction\n}) {\n  const handleAction = player => {\n    // This could be more complex, depending on your game's action logic\n    const action = `${player} took their turn`;\n    onPlayerAction(action); // Send action to backend via socket\n  };\n  if (!gameState) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading game state...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Game Status: \", gameState.gameStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Current Turn: \", gameState.currentTurn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-list\",\n      children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: player.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cards\",\n            children: player.cards.map((card, cardIndex) => /*#__PURE__*/_jsxDEV(Card, {\n              rank: card.rank,\n              suit: card.suit\n            }, cardIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAction(player.name),\n          children: \"Take Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      communityCards: gameState.communityCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Actions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: gameState.actions.map((action, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: action\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = PlayerList;\nexport default PlayerList;\nvar _c;\n$RefreshReg$(_c, \"PlayerList\");","map":{"version":3,"names":["React","Card","Table","jsxDEV","_jsxDEV","PlayerList","players","gameState","onPlayerAction","handleAction","player","action","children","fileName","_jsxFileName","lineNumber","columnNumber","className","gameStatus","currentTurn","map","index","name","cards","card","cardIndex","rank","suit","onClick","communityCards","actions","_c","$RefreshReg$"],"sources":["/Users/hang/Everything/computing/hold_em/app/frontend/src/components/PlayerList.jsx"],"sourcesContent":["// src/components/PlayerList.jsx\nimport React from 'react';\nimport Card from './Card';\nimport Table from './Table';\n\nfunction PlayerList({ players, gameState, onPlayerAction }) {\n  const handleAction = (player) => {\n    // This could be more complex, depending on your game's action logic\n    const action = `${player} took their turn`;\n    onPlayerAction(action); // Send action to backend via socket\n  };\n\n  if (!gameState) {\n    return <div>Loading game state...</div>;\n  }\n\n  return (\n    <div className=\"game-container\">\n      <h1>Game Status: {gameState.gameStatus}</h1>\n      <h2>Current Turn: {gameState.currentTurn}</h2>\n      \n      <div className=\"player-list\">\n        {players.map((player, index) => (\n          <div key={index} className=\"player\">\n            <div className=\"player-info\">\n              <h3>{player.name}</h3>\n              <div className=\"cards\">\n                {/* Display two cards per player */}\n                {player.cards.map((card, cardIndex) => (\n                  <Card key={cardIndex} rank={card.rank} suit={card.suit} />\n                ))}\n              </div>\n            </div>\n            <button onClick={() => handleAction(player.name)}>Take Action</button>\n          </div>\n        ))}\n      </div>\n\n      <Table communityCards={gameState.communityCards} />\n      \n      <h3>Actions:</h3>\n      <ul>\n        {gameState.actions.map((action, index) => (\n          <li key={index}>{action}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default PlayerList;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,UAAUA,CAAC;EAAEC,OAAO;EAAEC,SAAS;EAAEC;AAAe,CAAC,EAAE;EAC1D,MAAMC,YAAY,GAAIC,MAAM,IAAK;IAC/B;IACA,MAAMC,MAAM,GAAG,GAAGD,MAAM,kBAAkB;IAC1CF,cAAc,CAACG,MAAM,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,IAAI,CAACJ,SAAS,EAAE;IACd,oBAAOH,OAAA;MAAAQ,QAAA,EAAK;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACzC;EAEA,oBACEZ,OAAA;IAAKa,SAAS,EAAC,gBAAgB;IAAAL,QAAA,gBAC7BR,OAAA;MAAAQ,QAAA,GAAI,eAAa,EAACL,SAAS,CAACW,UAAU;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5CZ,OAAA;MAAAQ,QAAA,GAAI,gBAAc,EAACL,SAAS,CAACY,WAAW;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAE9CZ,OAAA;MAAKa,SAAS,EAAC,aAAa;MAAAL,QAAA,EACzBN,OAAO,CAACc,GAAG,CAAC,CAACV,MAAM,EAAEW,KAAK,kBACzBjB,OAAA;QAAiBa,SAAS,EAAC,QAAQ;QAAAL,QAAA,gBACjCR,OAAA;UAAKa,SAAS,EAAC,aAAa;UAAAL,QAAA,gBAC1BR,OAAA;YAAAQ,QAAA,EAAKF,MAAM,CAACY;UAAI;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtBZ,OAAA;YAAKa,SAAS,EAAC,OAAO;YAAAL,QAAA,EAEnBF,MAAM,CAACa,KAAK,CAACH,GAAG,CAAC,CAACI,IAAI,EAAEC,SAAS,kBAChCrB,OAAA,CAACH,IAAI;cAAiByB,IAAI,EAAEF,IAAI,CAACE,IAAK;cAACC,IAAI,EAAEH,IAAI,CAACG;YAAK,GAA5CF,SAAS;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAqC,CAC1D;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNZ,OAAA;UAAQwB,OAAO,EAAEA,CAAA,KAAMnB,YAAY,CAACC,MAAM,CAACY,IAAI,CAAE;UAAAV,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAV9DK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENZ,OAAA,CAACF,KAAK;MAAC2B,cAAc,EAAEtB,SAAS,CAACsB;IAAe;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEnDZ,OAAA;MAAAQ,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBZ,OAAA;MAAAQ,QAAA,EACGL,SAAS,CAACuB,OAAO,CAACV,GAAG,CAAC,CAACT,MAAM,EAAEU,KAAK,kBACnCjB,OAAA;QAAAQ,QAAA,EAAiBD;MAAM,GAAdU,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACe,EAAA,GA3CQ1B,UAAU;AA6CnB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}