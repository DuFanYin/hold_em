{"ast":null,"code":"var _jsxFileName = \"/Users/hang/github_repo/app/frontend/src/pages/Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport Player from \"../components/Player\"; // Component to display player info\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:8080\");\nfunction Game() {\n  _s();\n  const {\n    roomId,\n    playerName\n  } = useParams(); // Get roomId and playerName from URL params\n\n  useEffect(() => {\n    // Join the game room when the component mounts\n    socket.emit(\"joinRoom\", {\n      roomId,\n      playerName\n    });\n    console.log({\n      roomId,\n      playerName\n    });\n\n    // Listen for game state updates\n    socket.on(\"updateGameState\", updatedGameState => {\n      console.log(updatedGameState); // Log it for reference\n    });\n    return () => {\n      socket.off(\"updateGameState\");\n    };\n  }, [roomId, playerName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"xWYK7TKzhe5SB6DvqY6sn8cI8/g=\", false, function () {\n  return [useParams];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useParams","io","Player","jsxDEV","_jsxDEV","socket","Game","_s","roomId","playerName","emit","console","log","on","updatedGameState","off","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hang/github_repo/app/frontend/src/pages/Game.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport Player from \"../components/Player\"; // Component to display player info\n\nconst socket = io(\"http://localhost:8080\");\n\nfunction Game() {\n  const { roomId, playerName } = useParams(); // Get roomId and playerName from URL params\n\n  useEffect(() => {\n    // Join the game room when the component mounts\n    socket.emit(\"joinRoom\", { roomId, playerName });\n\n    console.log({ roomId, playerName });\n\n    // Listen for game state updates\n    socket.on(\"updateGameState\", (updatedGameState) => {\n      console.log(updatedGameState); // Log it for reference\n    });\n\n    return () => {\n      socket.off(\"updateGameState\");\n    };\n  }, [roomId, playerName]);\n\n  return (\n    <div>\n      hi\n\n    </div>\n  );\n}\n\nexport default Game;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,MAAM,MAAM,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,MAAM,GAAGJ,EAAE,CAAC,uBAAuB,CAAC;AAE1C,SAASK,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC,MAAM;IAAEC;EAAW,CAAC,GAAGT,SAAS,CAAC,CAAC,CAAC,CAAC;;EAE5CD,SAAS,CAAC,MAAM;IACd;IACAM,MAAM,CAACK,IAAI,CAAC,UAAU,EAAE;MAAEF,MAAM;MAAEC;IAAW,CAAC,CAAC;IAE/CE,OAAO,CAACC,GAAG,CAAC;MAAEJ,MAAM;MAAEC;IAAW,CAAC,CAAC;;IAEnC;IACAJ,MAAM,CAACQ,EAAE,CAAC,iBAAiB,EAAGC,gBAAgB,IAAK;MACjDH,OAAO,CAACC,GAAG,CAACE,gBAAgB,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC;IAEF,OAAO,MAAM;MACXT,MAAM,CAACU,GAAG,CAAC,iBAAiB,CAAC;IAC/B,CAAC;EACH,CAAC,EAAE,CAACP,MAAM,EAAEC,UAAU,CAAC,CAAC;EAExB,oBACEL,OAAA;IAAAY,QAAA,EAAK;EAGL;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV;AAACb,EAAA,CAzBQD,IAAI;EAAA,QACoBN,SAAS;AAAA;AAAAqB,EAAA,GADjCf,IAAI;AA2Bb,eAAeA,IAAI;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}