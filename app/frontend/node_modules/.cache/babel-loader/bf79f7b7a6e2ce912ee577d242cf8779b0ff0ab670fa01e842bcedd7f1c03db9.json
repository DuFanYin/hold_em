{"ast":null,"code":"var _jsxFileName = \"/Users/hang/Everything/computing/hold_em/app/frontend/src/pages/Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport Player from \"../components/Player\"; // Component to display player info\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:8080\");\nfunction Game() {\n  _s();\n  const {\n    roomId,\n    playerName\n  } = useParams(); // Get roomId and playerName from URL params\n  const [gameState, setGameState] = useState(null);\n  const [action, setAction] = useState(\"\"); // Track the current player's action\n\n  useEffect(() => {\n    // Join the game room when the component mounts\n    socket.emit(\"joinRoom\", {\n      roomId,\n      playerName\n    });\n\n    // Listen for game state updates\n    socket.on(\"updateGameState\", updatedGameState => {\n      console.log(updatedGameState); // Log it for reference\n      setGameState(updatedGameState);\n    });\n    return () => {\n      socket.off(\"updateGameState\");\n    };\n  }, [roomId, playerName]);\n  const handleAction = action => {\n    if (!gameState) return;\n\n    // Send the player's action to the server\n    socket.emit(\"playerAction\", {\n      roomId,\n      action\n    });\n\n    // Reset action after sending it\n    setAction(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"Byd7DGyOjTuusdRMp70z/vbgafQ=\", false, function () {\n  return [useParams];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useParams","io","Player","jsxDEV","_jsxDEV","socket","Game","_s","roomId","playerName","gameState","setGameState","action","setAction","emit","on","updatedGameState","console","log","off","handleAction","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hang/Everything/computing/hold_em/app/frontend/src/pages/Game.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport Player from \"../components/Player\"; // Component to display player info\n\nconst socket = io(\"http://localhost:8080\");\n\nfunction Game() {\n  const { roomId, playerName } = useParams(); // Get roomId and playerName from URL params\n  const [gameState, setGameState] = useState(null);\n  const [action, setAction] = useState(\"\"); // Track the current player's action\n\n  useEffect(() => {\n    // Join the game room when the component mounts\n    socket.emit(\"joinRoom\", { roomId, playerName });\n\n    // Listen for game state updates\n    socket.on(\"updateGameState\", (updatedGameState) => {\n      console.log(updatedGameState); // Log it for reference\n      setGameState(updatedGameState);\n    });\n\n    return () => {\n      socket.off(\"updateGameState\");\n    };\n  }, [roomId, playerName]);\n\n  const handleAction = (action) => {\n    if (!gameState) return;\n\n    // Send the player's action to the server\n    socket.emit(\"playerAction\", { roomId, action });\n\n    // Reset action after sending it\n    setAction(\"\");\n  };\n\n\n  return (\n    <div>\n      hi\n\n    </div>\n  );\n}\n\nexport default Game;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,MAAM,MAAM,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,MAAM,GAAGJ,EAAE,CAAC,uBAAuB,CAAC;AAE1C,SAASK,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC,MAAM;IAAEC;EAAW,CAAC,GAAGT,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1CC,SAAS,CAAC,MAAM;IACd;IACAM,MAAM,CAACS,IAAI,CAAC,UAAU,EAAE;MAAEN,MAAM;MAAEC;IAAW,CAAC,CAAC;;IAE/C;IACAJ,MAAM,CAACU,EAAE,CAAC,iBAAiB,EAAGC,gBAAgB,IAAK;MACjDC,OAAO,CAACC,GAAG,CAACF,gBAAgB,CAAC,CAAC,CAAC;MAC/BL,YAAY,CAACK,gBAAgB,CAAC;IAChC,CAAC,CAAC;IAEF,OAAO,MAAM;MACXX,MAAM,CAACc,GAAG,CAAC,iBAAiB,CAAC;IAC/B,CAAC;EACH,CAAC,EAAE,CAACX,MAAM,EAAEC,UAAU,CAAC,CAAC;EAExB,MAAMW,YAAY,GAAIR,MAAM,IAAK;IAC/B,IAAI,CAACF,SAAS,EAAE;;IAEhB;IACAL,MAAM,CAACS,IAAI,CAAC,cAAc,EAAE;MAAEN,MAAM;MAAEI;IAAO,CAAC,CAAC;;IAE/C;IACAC,SAAS,CAAC,EAAE,CAAC;EACf,CAAC;EAGD,oBACET,OAAA;IAAAiB,QAAA,EAAK;EAGL;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV;AAAClB,EAAA,CArCQD,IAAI;EAAA,QACoBN,SAAS;AAAA;AAAA0B,EAAA,GADjCpB,IAAI;AAuCb,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}