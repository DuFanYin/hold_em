{"ast":null,"code":"var _jsxFileName = \"/Users/hang/Everything/computing/hold_em/app/frontend/src/pages/Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport Player from \"../components/Player\"; // Component to display player info\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:8080\");\nfunction Game() {\n  _s();\n  const {\n    tableId,\n    playerName\n  } = useParams(); // Get tableId and playerName from URL params\n  const [gameState, setGameState] = useState(null);\n  const [action, setAction] = useState(\"\"); // Track the current player's action\n\n  useEffect(() => {\n    // Join the game when the component mounts\n    socket.emit(\"joinGame\", {\n      tableId,\n      playerName\n    });\n\n    // Listen for game state updates\n    socket.on(\"updateGameState\", updatedGameState => {\n      setGameState(updatedGameState);\n    });\n\n    // Clean up when the component unmounts\n    return () => {\n      socket.off(\"updateGameState\");\n    };\n  }, [tableId, playerName]);\n  const handleAction = player => {\n    if (!gameState) return;\n\n    // Send the player's action to the server\n    socket.emit(\"playerAction\", {\n      tableId,\n      action\n    });\n\n    // Reset action after sending it\n    setAction(\"\");\n  };\n  const renderPlayers = () => {\n    if (!gameState) return null;\n    return gameState.table.players.map(player => /*#__PURE__*/_jsxDEV(Player, {\n      player: player,\n      handleAction: handleAction\n    }, player.socketId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this));\n  };\n  const handleBet = () => {\n    setAction(\"bet\");\n  };\n  const handleFold = () => {\n    setAction(\"fold\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game p-4 bg-gray-100 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-center text-blue-600 mb-4\",\n      children: [\"Poker Game - Table: \", tableId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl text-center mb-6\",\n      children: [\"Welcome, \", playerName, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 mb-8\",\n      children: renderPlayers()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions flex justify-center space-x-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBet,\n        className: \"px-6 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition duration-300\",\n        children: \"Bet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFold,\n        className: \"px-6 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition duration-300\",\n        children: \"Fold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-action text-center mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl text-gray-700\",\n        children: [\"Current Action: \", action]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-info text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-800\",\n        children: [\"Pot: \", gameState ? gameState.table.pot : 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"9unnyO1OiTsodueGadja6rFCMJo=\", false, function () {\n  return [useParams];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useParams","io","Player","jsxDEV","_jsxDEV","socket","Game","_s","tableId","playerName","gameState","setGameState","action","setAction","emit","on","updatedGameState","off","handleAction","player","renderPlayers","table","players","map","socketId","fileName","_jsxFileName","lineNumber","columnNumber","handleBet","handleFold","className","children","onClick","pot","_c","$RefreshReg$"],"sources":["/Users/hang/Everything/computing/hold_em/app/frontend/src/pages/Game.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport Player from \"../components/Player\"; // Component to display player info\n\nconst socket = io(\"http://localhost:8080\");\n\nfunction Game() {\n  const { tableId, playerName } = useParams(); // Get tableId and playerName from URL params\n  const [gameState, setGameState] = useState(null);\n  const [action, setAction] = useState(\"\"); // Track the current player's action\n\n  useEffect(() => {\n    // Join the game when the component mounts\n    socket.emit(\"joinGame\", { tableId, playerName });\n\n    // Listen for game state updates\n    socket.on(\"updateGameState\", (updatedGameState) => {\n      setGameState(updatedGameState);\n    });\n\n    // Clean up when the component unmounts\n    return () => {\n      socket.off(\"updateGameState\");\n    };\n  }, [tableId, playerName]);\n\n  const handleAction = (player) => {\n    if (!gameState) return;\n\n    // Send the player's action to the server\n    socket.emit(\"playerAction\", { tableId, action });\n\n    // Reset action after sending it\n    setAction(\"\");\n  };\n\n  const renderPlayers = () => {\n    if (!gameState) return null;\n\n    return gameState.table.players.map((player) => (\n      <Player key={player.socketId} player={player} handleAction={handleAction} />\n    ));\n  };\n\n  const handleBet = () => {\n    setAction(\"bet\");\n  };\n\n  const handleFold = () => {\n    setAction(\"fold\");\n  };\n\n  return (\n    <div className=\"game p-4 bg-gray-100 min-h-screen\">\n      <h1 className=\"text-3xl font-bold text-center text-blue-600 mb-4\">\n        Poker Game - Table: {tableId}\n      </h1>\n      <p className=\"text-xl text-center mb-6\">Welcome, {playerName}!</p>\n\n      {/* Render the players */}\n      <div className=\"players grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 mb-8\">\n        {renderPlayers()}\n      </div>\n\n      {/* Actions (Bet, Fold, etc.) */}\n      <div className=\"actions flex justify-center space-x-4 mb-6\">\n        <button\n          onClick={handleBet}\n          className=\"px-6 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition duration-300\"\n        >\n          Bet\n        </button>\n        <button\n          onClick={handleFold}\n          className=\"px-6 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition duration-300\"\n        >\n          Fold\n        </button>\n      </div>\n\n      {/* Display the current action */}\n      <div className=\"current-action text-center mb-6\">\n        <p className=\"text-xl text-gray-700\">Current Action: {action}</p>\n      </div>\n\n      {/* Display the table and pot */}\n      <div className=\"table-info text-center\">\n        <p className=\"text-lg text-gray-800\">Pot: {gameState ? gameState.table.pot : 0}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,MAAM,MAAM,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,MAAM,GAAGJ,EAAE,CAAC,uBAAuB,CAAC;AAE1C,SAASK,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC,OAAO;IAAEC;EAAW,CAAC,GAAGT,SAAS,CAAC,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1CC,SAAS,CAAC,MAAM;IACd;IACAM,MAAM,CAACS,IAAI,CAAC,UAAU,EAAE;MAAEN,OAAO;MAAEC;IAAW,CAAC,CAAC;;IAEhD;IACAJ,MAAM,CAACU,EAAE,CAAC,iBAAiB,EAAGC,gBAAgB,IAAK;MACjDL,YAAY,CAACK,gBAAgB,CAAC;IAChC,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXX,MAAM,CAACY,GAAG,CAAC,iBAAiB,CAAC;IAC/B,CAAC;EACH,CAAC,EAAE,CAACT,OAAO,EAAEC,UAAU,CAAC,CAAC;EAEzB,MAAMS,YAAY,GAAIC,MAAM,IAAK;IAC/B,IAAI,CAACT,SAAS,EAAE;;IAEhB;IACAL,MAAM,CAACS,IAAI,CAAC,cAAc,EAAE;MAAEN,OAAO;MAAEI;IAAO,CAAC,CAAC;;IAEhD;IACAC,SAAS,CAAC,EAAE,CAAC;EACf,CAAC;EAED,MAAMO,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACV,SAAS,EAAE,OAAO,IAAI;IAE3B,OAAOA,SAAS,CAACW,KAAK,CAACC,OAAO,CAACC,GAAG,CAAEJ,MAAM,iBACxCf,OAAA,CAACF,MAAM;MAAuBiB,MAAM,EAAEA,MAAO;MAACD,YAAY,EAAEA;IAAa,GAA5DC,MAAM,CAACK,QAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA+C,CAC5E,CAAC;EACJ,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBhB,SAAS,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,MAAMiB,UAAU,GAAGA,CAAA,KAAM;IACvBjB,SAAS,CAAC,MAAM,CAAC;EACnB,CAAC;EAED,oBACET,OAAA;IAAK2B,SAAS,EAAC,mCAAmC;IAAAC,QAAA,gBAChD5B,OAAA;MAAI2B,SAAS,EAAC,mDAAmD;MAAAC,QAAA,GAAC,sBAC5C,EAACxB,OAAO;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACLxB,OAAA;MAAG2B,SAAS,EAAC,0BAA0B;MAAAC,QAAA,GAAC,WAAS,EAACvB,UAAU,EAAC,GAAC;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAGlExB,OAAA;MAAK2B,SAAS,EAAC,kFAAkF;MAAAC,QAAA,EAC9FZ,aAAa,CAAC;IAAC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eAGNxB,OAAA;MAAK2B,SAAS,EAAC,4CAA4C;MAAAC,QAAA,gBACzD5B,OAAA;QACE6B,OAAO,EAAEJ,SAAU;QACnBE,SAAS,EAAC,yFAAyF;QAAAC,QAAA,EACpG;MAED;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTxB,OAAA;QACE6B,OAAO,EAAEH,UAAW;QACpBC,SAAS,EAAC,qFAAqF;QAAAC,QAAA,EAChG;MAED;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNxB,OAAA;MAAK2B,SAAS,EAAC,iCAAiC;MAAAC,QAAA,eAC9C5B,OAAA;QAAG2B,SAAS,EAAC,uBAAuB;QAAAC,QAAA,GAAC,kBAAgB,EAACpB,MAAM;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,eAGNxB,OAAA;MAAK2B,SAAS,EAAC,wBAAwB;MAAAC,QAAA,eACrC5B,OAAA;QAAG2B,SAAS,EAAC,uBAAuB;QAAAC,QAAA,GAAC,OAAK,EAACtB,SAAS,GAAGA,SAAS,CAACW,KAAK,CAACa,GAAG,GAAG,CAAC;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrB,EAAA,CArFQD,IAAI;EAAA,QACqBN,SAAS;AAAA;AAAAmC,EAAA,GADlC7B,IAAI;AAuFb,eAAeA,IAAI;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}